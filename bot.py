import telebot
from telebot import types

from db import BotDB

import os
from dotenv import load_dotenv, find_dotenv

import requests

#database connection
BotDB = BotDB('users.db')

#using a global variable
load_dotenv(find_dotenv())
bot_token = os.getenv('BOT_TOKEN')
api_key = os.getenv('API_KEY')

#connect the telebot
telebot = telebot.TeleBot(bot_token)

commands = '/start - –Ω–∞—á–∞—Ç—å\n/about - –æ –±–æ—Ç–µ\n/categories - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n/subscribes - –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏\n/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n/help - –ø–æ–º–æ—â—å'
about = '–ø—Ä–∏–≤–µ—Ç –º–µ–Ω—è –∑–æ–≤—É—Ç —Å–ª–∞–¥–∫–∏–π –±–æ—ÇüôÉ –∏ —è —Ç–µ–±–µ –ø–æ–∫–∞–∂—É —Å–∞–º—ã–µ –∫–ª–∞—Å—Å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤–æ –≤—Å–µ–º –ú–∏—Ä–µ üåç!'

@telebot.message_handler(commands=['start'])
def start(message):
    answer = ''
    user_id = message.chat.id

    if(not BotDB.find_user(user_id)):
        BotDB.add_user(user_id)
        answer = '–ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π!üôÉü§ó\n–í—Å–µ –∫–æ–º–∞–Ω–¥—ã /help'
    else:
        answer = '–≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç–∏—Ä–æ–≤–∞–ª–∏—Å—å!ü§ó\n–í—Å–µ –∫–æ–º–∞–Ω–¥—ã /help'

    telebot.send_message(user_id, f'{message.from_user.first_name}, {answer}')

@telebot.message_handler(commands=['help'])
def send_help(message):
    telebot.send_message(message.chat.id, f'{message.from_user.first_name}, —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ üôÉ:\n{commands}')

@telebot.message_handler(commands=['about'])
def send_about(message):
    telebot.send_message(message.chat.id, f'{message.from_user.first_name}, ' + about + f'\n\n–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ üôÉ:\n{commands}')

@telebot.message_handler(commands=['categories'])
def send_categories(message):
    news_categories = BotDB.get_news_categories()
    markup = types.InlineKeyboardMarkup()
    
    for category in news_categories:
        markup.add(types.InlineKeyboardButton(category[1], callback_data=f'sub_category-{category[0]}'))

    telebot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π üôÉ:', reply_markup=markup)

@telebot.callback_query_handler(func=lambda call: True)
def check_command(call):
    command = call.data.split('-')[0]
    data = call.data.split('-')[1]
    user_id = call.message.chat.id;
    result = ''

    if(command == 'sub_category'):
        category_id = data

        result = subscribe_category(user_id, category_id)
    elif(command == 'show_news'):
        category_news = data

        show_news_category(category_news, user_id)

        result = f'–ù–æ–≤–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {category_news}\n–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –µ—â—ë –±–æ–ª—å—à–µ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π!üòâ\n/categories'
    elif(command == 'unsub_category'):
        category_id = data

        print(BotDB.unsubscribe_category(user_id, category_id))

        result = f'–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—åüòâ\n/subscribes - –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏'

    telebot.send_message(user_id, result)
    telebot.answer_callback_query(call.id)

@telebot.message_handler(commands=['unsubscribe'])
def unsubscribe_category(message):
    user_subscribes = BotDB.get_subscribes(message.chat.id)

    markup = types.InlineKeyboardMarkup()
    
    for category in user_subscribes:
        markup.add(types.InlineKeyboardButton(category[1], callback_data=f'unsub_category-{category[0]}'))

    telebot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ—Ç –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è üôÉ:', reply_markup=markup)

@telebot.message_handler(commands=['subscribes'])
def get_user_subscribes(message):
    user_id = message.chat.id
    result = ''
    user_subscribes = BotDB.get_subscribes(user_id)
    markup = types.InlineKeyboardMarkup()
    
    if(bool(len(user_subscribes))):
        result = '–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–æ–≤–æ—Å—Ç–µ–π:\n/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è'
        for subscribe in user_subscribes:
            markup.add(types.InlineKeyboardButton(subscribe[1], callback_data=f'show_news-{subscribe[1]}'))
    else:
        result = '–≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π!\n/categories - —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ —Å–µ–π—á–∞—Å!üòâ'
    
    telebot.send_message(user_id, f'{message.from_user.first_name}, ' + result, reply_markup=markup)

def subscribe_category(user_id, category_id):
    category = BotDB.get_category(category_id)
    result = ''

    if(not BotDB.check_subscribe_category(user_id, category_id)):
        BotDB.subscribe_category(user_id, category_id)

        result = f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category[1]} üòâ\n/subscribes - –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏'
    else:
        result = f'–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category[1]} üòâ\n/subscribes - –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏'
       
    return result;
    
def send_image(chat_id, imgURL, caption):
    send_text = f'https://api.telegram.org/bot{bot_token}/sendPhoto?chat_id={chat_id}&parse_mode=HTML&caption={caption}&photo={imgURL}'
    response = requests.get(send_text)

    return response.json()

def show_news_category(category_news, chat_id):
    response = requests.get(f'https://newsapi.org/v2/top-headlines?category={category_news}&country=ru&apiKey={api_key}&pageSize=5')

    for post in response.json()['articles']:
        send_image(chat_id, post['urlToImage'], post['title'])



telebot.infinity_polling()